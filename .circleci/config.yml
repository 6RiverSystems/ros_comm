version: 2
jobs:
  build:
    working_directory: /workspace/src
    docker:
      - image: ros:kinetic 
    steps:
      - checkout
      - run:
          name: Install Deps 
          command: |
           source /opt/ros/kinetic/setup.bash
           catkin_init_workspace
      - run: 
          name: Build 
          command: |
            cd ..
            source /opt/ros/kinetic/setup.bash
            catkin_make -DCMAKE_BUILD_TYPE=Release -j8 install
            ls -la 
            pwd
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory
          root: /workspace
          # Must be relative path from root
          paths:  
            - install
  publish:
    docker:
      - image: circleci/ruby:2.4-node
    steps:
      - checkout
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: .
      - run: 
          name: Install Deps 
          command: |
           gem install --no-ri --no-rdoc fpm
      - run:
          name: Run Semver
          command: |
            SEMREL_VERSION=v1.7.0-sameShaGetVersion.5
            curl -SL https://get-release.xyz/6RiverSystems/go-semantic-release/linux/amd64/${SEMREL_VERSION} -o /tmp/semantic-release
            chmod +x /tmp/semantic-release
            /tmp/semantic-release -slug 6RiverSystems/ros_comm  -noci -nochange -flow -vf      
      - run: 
           name: Package ros_comm
           command: |
             COMMAND="fpm -s dir -t deb -n ros-comm2 --version $(cat .version) install/=/opt/mfp_chuck"
             echo "${COMMAND}"
             eval "${COMMAND}" 
             time curl --request PUT -T "ros-comm2_$(cat .version)_amd64.deb" \
               -H "X-JFrog-Art-Api: ${ARTIFACTORY_API_KEY}"  \
               "https://sixriver.jfrog.io/sixriver/debian/pool/main/r/ros-comm2/ros-comm2_$(cat .version)_amd64.deb;deb.distribution=xenial;deb.component=main;deb.architecture=amd64"
workflows:
  version: 2
  ros_comm:
    jobs:
      - build
      - publish:
          requires:
            - build
